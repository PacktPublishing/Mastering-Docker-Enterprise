####################################################################################################################################################################################
# This Manifest file is for deploying Sysdig with Kubernetes Monitoring Integration on Docker EE 2.1.
####################################################################################################################################################################################
#
# This Kubernetes Manifest file deploys the Sysdig Agents with Kubernetes Monitoring Integration on Docker EE 2.1.
# A Kubernetes DaemonSet is used when you want an application or service to run all all nodes in the cluster.
# In a Docker EE UCP Cluster there are both Docker Swarm nodes and Kubernetes nodes on each server in the cluster.
# Docker EE UCP will prevent a Kubernetes pod from being deployed on a node that is configured as Swarm Only Orchestration.
# There is one exception to this rule - pods being deployed and managed in the Kubernetes kube-system namespace. 
# Therefore the Sysdig Agent needs to be deployed under the kube-system namespace.
#
# The Sysdig Agent requires a Sysdig Access Key in order for it to connect to the Sysdig SaaS server and send it the monitoring metrics data.
# The Sysdig Access Key needs to be securely handled and protected. This manifest file requires it to be defined in a Kubernetes secret.
# You create the secret with the following command prior to deploying this DaemonSet.
#
#     kubectl create secret generic sysdig-agent --namespace kube-system --from-literal=access-key='**your-sysdig-access-key**'
#
####################################################################################################################################################################################
# Gary Forghetti
# Docker Inc.
####################################################################################################################################################################################
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sysdig-agent
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sysdig-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - replicationcontrollers
  - services
  - events
  - limitranges
  - namespaces
  - nodes
  - resourcequotas
  - endpoints
  - componentstatuses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - ingresses
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:                  # Kubelet connectivity
  - ""
  resources:
  - nodes/metrics
  - nodes/spec
  - nodes/proxy
  verbs:
  - get  
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: sysdig-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sysdig-agent
subjects:
- kind: ServiceAccount
  name: sysdig-agent
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sysdig-agent-config
  namespace: kube-system
data:
  dragent.yaml: |
    new_k8s: true
    k8s_cluster_name: production
    app_checks:
      - name: mysql
        pattern:
          comm: mysqld
        conf:
          server: 127.0.0.1
          user: sysdig-agent
          pass: Passw0rd#
---                    
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: sysdig-agent
  namespace: kube-system
  labels:
    app: sysdig-agent
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sysdig-agent
    spec:
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
      - name: dev-vol
        hostPath:
          path: /dev
      - name: proc-vol
        hostPath:
          path: /proc
      - name: boot-vol
        hostPath:
          path: /boot
      - name: modules-vol
        hostPath:
          path: /lib/modules
      - name: usr-vol
        hostPath:
          path: /usr
      - name: sysdig-agent-config
        configMap:
          name: sysdig-agent-config
          optional: true
      - name: sysdig-agent-secrets
        secret:
          secretName: sysdig-agent
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      hostPID: true
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      serviceAccount: sysdig-agent
      terminationGracePeriodSeconds: 5
      containers:
      - name: sysdig-agent
        image: sysdig/agent
        imagePullPolicy: Always
        securityContext:
          privileged: true
        resources:
          # Resources needed are subjective on the actual workload
          # please refer to Sysdig Support for more info about it
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            memory: 1024Mi
        readinessProbe:
          exec:
            command: [ "test", "-e", "/opt/draios/logs/draios.log" ]
          initialDelaySeconds: 10
        volumeMounts:
        - mountPath: /host/var/run/docker.sock
          name: docker-sock
          readOnly: false
        - mountPath: /host/dev
          name: dev-vol
          readOnly: false
        - mountPath: /host/proc
          name: proc-vol
          readOnly: true
        - mountPath: /host/boot
          name: boot-vol
          readOnly: true
        - mountPath: /host/lib/modules
          name: modules-vol
          readOnly: true
        - mountPath: /host/usr
          name: usr-vol
          readOnly: true
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /opt/draios/etc/kubernetes/config/
          name: sysdig-agent-config
        - mountPath: /opt/draios/etc/kubernetes/secrets
          name: sysdig-agent-secrets
